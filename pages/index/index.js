"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const create_1 = require("../../utils/create");
const index_1 = require("../../store/index");
const app = getApp();
create_1.default.Page(index_1.default, {
    use: [
        'motto',
        'userInfo',
        'hasUserInfo',
        'canIUse'
    ],
    computed: {
        reverseMotto() {
            return this.motto.split('').reverse().join('');
        }
    },
    bindViewTap() {
        wx.navigateTo({
            url: '../logs/logs'
        });
    },
    onLoad() {
        if (app.globalData.userInfo) {
            this.store.data.userInfo = app.globalData.userInfo;
            this.store.data.hasUserInfo = true;
        }
        else if (this.data.canIUse) {
            app.userInfoReadyCallback = res => {
                this.store.data.userInfo = res;
                this.store.data.hasUserInfo = true;
            };
        }
        else {
            wx.getUserInfo({
                success: res => {
                    app.globalData.userInfo = res.userInfo;
                    this.store.data.userInfo = res.userInfo;
                    this.store.data.hasUserInfo = true;
                }
            });
        }
        setTimeout(() => {
            this.store.data.logs.push('abc');
            this.store.data.motto = '123456';
        }, 1000);
        setTimeout(() => {
            this.store.data.motto = 'abcdefg';
        }, 2000);
    },
    getUserInfo(e) {
        this.store.data.userInfo = e.detail.userInfo;
        this.store.data.hasUserInfo = true;
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9taW5pcHJvZ3JhbS9wYWdlcy9pbmRleC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtDQUF1QztBQUN2Qyw2Q0FBcUM7QUFLckMsTUFBTSxHQUFHLEdBQUcsTUFBTSxFQUFVLENBQUE7QUFFNUIsZ0JBQU0sQ0FBQyxJQUFJLENBQUMsZUFBSyxFQUFFO0lBQ2pCLEdBQUcsRUFBRTtRQUNILE9BQU87UUFDUCxVQUFVO1FBQ1YsYUFBYTtRQUNiLFNBQVM7S0FDVjtJQUNELFFBQVEsRUFBRTtRQUNSLFlBQVk7WUFDVixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUNoRCxDQUFDO0tBQ0Y7SUFFRCxXQUFXO1FBQ1QsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNaLEdBQUcsRUFBRSxjQUFjO1NBQ3BCLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFDRCxNQUFNO1FBQ0osSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRTtZQUMzQixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUE7WUFDbEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQTtTQUVuQzthQUFNLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFHNUIsR0FBRyxDQUFDLHFCQUFxQixHQUFHLEdBQUcsQ0FBQyxFQUFFO2dCQUNoQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFBO2dCQUM5QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFBO1lBQ3BDLENBQUMsQ0FBQTtTQUNGO2FBQU07WUFFTCxFQUFFLENBQUMsV0FBVyxDQUFDO2dCQUNiLE9BQU8sRUFBRSxHQUFHLENBQUMsRUFBRTtvQkFDYixHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsUUFBUSxDQUFBO29CQUN0QyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLFFBQVEsQ0FBQTtvQkFDdkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQTtnQkFDcEMsQ0FBQzthQUNGLENBQUMsQ0FBQTtTQUNIO1FBRUQsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNkLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUE7WUFDaEMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLFFBQVEsQ0FBQTtRQUNsQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFFUixVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQTtRQUNuQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUE7SUFDVixDQUFDO0lBRUQsV0FBVyxDQUFDLENBQU07UUFDaEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFBO1FBQzVDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUE7SUFFcEMsQ0FBQztDQUNGLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGUgZnJvbSAnLi4vLi4vdXRpbHMvY3JlYXRlJ1xuaW1wb3J0IHN0b3JlIGZyb20gJy4uLy4uL3N0b3JlL2luZGV4J1xuXG4vL+iOt+WPluW6lOeUqOWunuS+i1xuaW1wb3J0IHsgSU15QXBwIH0gZnJvbSAnLi4vLi4vYXBwJ1xuXG5jb25zdCBhcHAgPSBnZXRBcHA8SU15QXBwPigpXG5cbmNyZWF0ZS5QYWdlKHN0b3JlLCB7XG4gIHVzZTogW1xuICAgICdtb3R0bycsXG4gICAgJ3VzZXJJbmZvJyxcbiAgICAnaGFzVXNlckluZm8nLFxuICAgICdjYW5JVXNlJ1xuICBdLFxuICBjb21wdXRlZDoge1xuICAgIHJldmVyc2VNb3R0bygpIHtcbiAgICAgIHJldHVybiB0aGlzLm1vdHRvLnNwbGl0KCcnKS5yZXZlcnNlKCkuam9pbignJylcbiAgICB9XG4gIH0sXG4gIC8v5LqL5Lu25aSE55CG5Ye95pWwXG4gIGJpbmRWaWV3VGFwKCkge1xuICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgdXJsOiAnLi4vbG9ncy9sb2dzJ1xuICAgIH0pXG4gIH0sXG4gIG9uTG9hZCgpIHtcbiAgICBpZiAoYXBwLmdsb2JhbERhdGEudXNlckluZm8pIHtcbiAgICAgIHRoaXMuc3RvcmUuZGF0YS51c2VySW5mbyA9IGFwcC5nbG9iYWxEYXRhLnVzZXJJbmZvXG4gICAgICB0aGlzLnN0b3JlLmRhdGEuaGFzVXNlckluZm8gPSB0cnVlXG5cbiAgICB9IGVsc2UgaWYgKHRoaXMuZGF0YS5jYW5JVXNlKSB7XG4gICAgICAvLyDnlLHkuo4gZ2V0VXNlckluZm8g5piv572R57uc6K+35rGC77yM5Y+v6IO95Lya5ZyoIFBhZ2Uub25Mb2FkIOS5i+WQjuaJjei/lOWbnlxuICAgICAgLy8g5omA5Lul5q2k5aSE5Yqg5YWlIGNhbGxiYWNrIOS7pemYsuatoui/meenjeaDheWGtVxuICAgICAgYXBwLnVzZXJJbmZvUmVhZHlDYWxsYmFjayA9IHJlcyA9PiB7XG4gICAgICAgIHRoaXMuc3RvcmUuZGF0YS51c2VySW5mbyA9IHJlc1xuICAgICAgICB0aGlzLnN0b3JlLmRhdGEuaGFzVXNlckluZm8gPSB0cnVlXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIOWcqOayoeaciSBvcGVuLXR5cGU9Z2V0VXNlckluZm8g54mI5pys55qE5YW85a655aSE55CGXG4gICAgICB3eC5nZXRVc2VySW5mbyh7XG4gICAgICAgIHN1Y2Nlc3M6IHJlcyA9PiB7XG4gICAgICAgICAgYXBwLmdsb2JhbERhdGEudXNlckluZm8gPSByZXMudXNlckluZm9cbiAgICAgICAgICB0aGlzLnN0b3JlLmRhdGEudXNlckluZm8gPSByZXMudXNlckluZm9cbiAgICAgICAgICB0aGlzLnN0b3JlLmRhdGEuaGFzVXNlckluZm8gPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnN0b3JlLmRhdGEubG9ncy5wdXNoKCdhYmMnKVxuICAgICAgdGhpcy5zdG9yZS5kYXRhLm1vdHRvID0gJzEyMzQ1NidcbiAgICB9LCAxMDAwKVxuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICB0aGlzLnN0b3JlLmRhdGEubW90dG8gPSAnYWJjZGVmZydcbiAgICB9LCAyMDAwKVxuICB9LFxuXG4gIGdldFVzZXJJbmZvKGU6IGFueSkge1xuICAgIHRoaXMuc3RvcmUuZGF0YS51c2VySW5mbyA9IGUuZGV0YWlsLnVzZXJJbmZvXG4gICAgdGhpcy5zdG9yZS5kYXRhLmhhc1VzZXJJbmZvID0gdHJ1ZVxuXG4gIH1cbn0pXG4iXX0=